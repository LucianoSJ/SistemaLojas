<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnConfirmar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>